#!/bin/sh
# gen_symbols.sh <elf-file> <out-c-file>
#
# Example:
#   ./scripts/gen_symbols.sh build/frostix.tmp src/symbols.c

set -e

if [ $# -ne 2 ]; then
    echo "Usage: $0 <elf-file> <out-c-file>"
    exit 2
fi

ELF="$1"
OUT="$2"

if [ ! -f "$ELF" ]; then
    echo "Error: ELF file '$ELF' not found" >&2
    exit 1
fi

TMPNM="$(mktemp)"
nm -n --defined-only "$ELF" > "$TMPNM" 2>/dev/null || { echo "nm failed"; rm -f "$TMPNM"; exit 1; }

SYMCNT=$(awk '/ [Tt] /{c++} END{print c+0}' "$TMPNM")
if [ "$SYMCNT" -eq 0 ]; then
    echo "/* Auto-generated: no text symbols found in $ELF */" > "$OUT"
    echo "#include <kernel/kernel.h>" >> "$OUT"
    echo "struct symbol { u32 addr; const char *name; };" >> "$OUT"
    echo "struct symbol symbols[] = { };" >> "$OUT"
    echo "size_t num_symbols = 0;" >> "$OUT"
    rm -f "$TMPNM"
    exit 0
fi

cat > "$OUT" <<EOF
/* Auto-generated by gen_symbols.sh from: $ELF */
#include <kernel/kernel.h>
struct symbol { u32 addr; const char *name; };
struct symbol symbols[] = {
EOF

awk '/ [Tt] /{
    gsub(/"/, "\\\"", $3);
    printf "    { 0x%s, \"%s\" },\n", $1, $3
}' "$TMPNM" >> "$OUT"

cat >> "$OUT" <<EOF
};
EOF

echo "size_t num_symbols = $SYMCNT;" >> "$OUT"

rm -f "$TMPNM"
exit 0